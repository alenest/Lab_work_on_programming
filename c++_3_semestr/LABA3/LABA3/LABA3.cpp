// LABA3.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <windows.h>
#include <cmath>
using namespace std;

class YOUR_DATE {  // создание класса треугольник
private:
    int* DAY, * MONTH, * YEAR;//день, месяц и год
public:
    YOUR_DATE() //конструктор класса
    {
        DAY = new int();
        MONTH = new int();
        YEAR = new int();
        *DAY = *MONTH = *YEAR = 0; // по умолчанию все значения равны нулю
    }
    
    virtual void InputDATE()
    {
        int *day, *month, *year;
        //cout << "" << endl;
        year = new int();
        while (true) { 
            cout << "Введите год (число от 1 до 9999): "<<endl;
            if (!(cin >> *year) || cin.get() != '\n') { // если ошибка ввода - ввели не целое число или в потоке ввода остались символы (кроме \n)
                cout << "Надо ввести целое число!" << endl; // вывести сообщение
                cin.clear(); // сбросить ошибку ввода, -> cin.fail() = 0 (cin.fail() = 1, т.к. в числовую переменную записываются символы)
                while (cin.get() != '\n'); // очистить поток - считать все символы, пока не считается последний (т.е. \n)
            }
            else
                if (*year < 0 ) 
                {
                    cout << "Недопустимое значение! Года до н.э. не рассматриваются" << endl;
                }
                else if (*year > 9999)
                {
                    cout << "Недопустимое значение! выберите число от 1 до 9999" << endl;
                }
                else if (*year == 0)
                {
                    cout << "Недопустимое значение! Нулевого года в григорианском календаре не существует" << endl;
                }
                else break;
        }
        month = new int();
        while (true) {  
            cout << "Введите месяц (число от 1 до 12): " << endl;
            if (!(cin >> *month) || cin.get() != '\n') { // если ошибка ввода - ввели не целое число или в потоке ввода остались символы (кроме \n)
                cout << "Надо ввести целое число!" << endl; // вывести сообщение
                cin.clear(); // сбросить ошибку ввода, -> cin.fail() = 0 (cin.fail() = 1, т.к. в числовую переменную записываются символы)
                while (cin.get() != '\n'); // очистить поток - считать все символы, пока не считается последний (т.е. \n)
            }
            else
                if (*month < 1 || *month > 12)
                {
                    cout << "Недопустимое значение! Введите значение от 1 до 12" << endl;
                }
                else break;
        }
        day = new int();
        while (true) {  // ввод координаты Х первой точки
            cout << "Введите месяц (число от 1 до 12): " << endl;
            if (!(cin >> *day) || cin.get() != '\n') { // если ошибка ввода - ввели не целое число или в потоке ввода остались символы (кроме \n)
                cout << "Надо ввести целое число!" << endl; // вывести сообщение
                cin.clear(); // сбросить ошибку ввода, -> cin.fail() = 0 (cin.fail() = 1, т.к. в числовую переменную записываются символы)
                while (cin.get() != '\n'); // очистить поток - считать все символы, пока не считается последний (т.е. \n)
            }
            else
                if (*day < 1 || *day > 31)
                {
                    cout << "Недопустимое значение для дня ЛЮБОГО месяца!" << endl;
                }
                else if (*day == 31 && (*month == 4 || *month == 6 || *month == 9 || *month == 11))
                {
                    cout << "Недопустимое значение ! В ЭТОМ месяце 30 дней" << endl;
                }
                else if (*month == 2 && *day > 29)
                {
                    cout << "Недопустимое значение дней в феврале! " << endl;
                }
                else if (*month == 2 && *day == 29 && ((*year % 4 == 0 && *year % 100 != 0)or ((*year % 4 == 0 && *year % 100 == 0 && *year % 400 == 0) )))
                {
                    cout << "Этот год не является високосным, в нем нет 29 дня" << endl;
                }
                else break;

            *DAY = *day;
            *MONTH = *month;
            *YEAR = *year;
            cout << "Вы внесли дату" << endl;

        }
        
    
    }

    virtual void OutputDATE() {  // вывод полученных значений
        cout << "Ваша ДАТА: " << *DAY << "." << *MONTH << "." << *YEAR << endl << endl;
    }

    ~YOUR_DATE() // деструктор класса 
    { 
        delete[] DAY;
        delete[] MONTH;
        delete[] YEAR;
    }
};


int main()
{
    std::cout << "Hello World!\n";
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
